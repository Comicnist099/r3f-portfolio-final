/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF, useTexture, useVideoTexture } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { animate, useMotionValue } from "framer-motion";
import { motion } from "framer-motion-3d";
import React, { useEffect } from "react";

import * as THREE from "three";

export function Office(props) {
  const { section } = props;
  const { nodes, materials2 } = useGLTF("models/amongus.gltf");
/*   const { nodes, materials } = useGLTF("models/scene.gltf");
 */

  const texture = useTexture("textures/blinn1_baseColor.png");
  const textureVSCode = useVideoTexture("textures/vscode.mp4");
  const texture2 = useTexture("textures/lambert4_baseColor.png");

  texture.flipY = false;
  texture.encoding = THREE.sRGBEncoding;

  const textureMaterial = new THREE.MeshStandardMaterial({
    map: texture,
    transparent: true,
    opacity: 1,
  });
  const textureMaterial2 = new THREE.MeshStandardMaterial({
    map: texture2,
    transparent: false,
    opacity: 1,

  });

  const textureGlassMaterial = new THREE.MeshStandardMaterial({
    map: texture,
    transparent: true,
    opacity: 0.42,

  });

  const textureOpacity = useMotionValue(0);
  const glassTextureOpacity = useMotionValue(0);

  useEffect(() => {
    animate(textureOpacity, section === 0 ? 1 : 0);
    animate(glassTextureOpacity, section === 0 ? 0.42 : 0);
  }, [section]);

  useFrame(() => {
    textureMaterial.opacity = textureOpacity.get();
    textureGlassMaterial.opacity = glassTextureOpacity.get();
  });

  return (
    <group {...props} dispose={null}>
           <mesh
        name="Plane001_1"
        geometry={nodes.pCylinder13_blinn1_0.geometry}
        material={textureMaterial}
      />
                 <mesh
        name="Plane001_1"
        geometry={nodes.pCube4_lambert4_0.geometry}
        material={textureMaterial2}
      />
    </group>
  );
}


useGLTF.preload("models/amongus.gltf");

